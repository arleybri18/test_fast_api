name: CD Staging Env

on: [pull_request]

# set the default shell for all actions steps
defaults:
  run:
    shell: bash

# set the env vars
env:
  SHORT_SHA: ${GITHUB_SHA::5}
  PROJECT_ID: membercenter-staging
  SERVICE_APP_NAME: membercenter-api # service name (refering to the app name to better understanding)

run-name: membercenter-api-deployment-staging-env

jobs:
  cd-deployment-staging-env:
    runs-on: ubuntu-22.04 # you can use the latest version also as it shows (runs-on: ubuntu-latest)
    
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Download GitHub Sources (Checkout)
        timeout-minutes: 2
        uses: actions/checkout@v3
        continue-on-error: false

      - name: Configuring env Vars (staging env)
        timeout-minutes: 2
        run: |
          # Env Vars (staging env)
          echo "APP_ENV=staging" >> .env.staging
          # Redis Host (staging env)
          echo "REDIS_HOST=10.24.183.155" >> .env.staging
          cp .env.staging .env
        continue-on-error: false

      - name: Auth for GCP
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.RUN_SA_KEY }}'

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

      # - name: Authorize Docker Push
      #   run: gcloud auth configure-docker --quiet

      # build the docker image and upload to artifact registry with a tag
      - name: Build and Artifact Upload
        run: |-
          gcloud builds submit --quiet --suppress-logs --region=europe-west1 \
          --tag europe-west1-docker.pkg.dev/${{ env.PROJECT_ID }}/base-images/${{ env.SERVICE_APP_NAME }}:${{ env.SHORT_SHA }} .

      # - name: Deploy to Cloud Run
      #   run: |-
      #     gcloud run deploy ${{ env.SERVICE_APP_NAME }} --service-account ${{ secrets.RUN_SA_EMAIL }} \
      #     --image europe-west1-docker.pkg.dev/${{ env.PROJECT_ID }}/base-images/${{ env.SERVICE_APP_NAME }}:${{ env.SHORT_SHA }} \
      #     --region europe-west1 --platform managed --memory 8Gi --min-instances 2 --max-instances 4 \
      #     --timeout 1800s --allow-unauthenticated --port "8000" --vpc-connector membercenter-staging-vpc \
      #     --command uvicorn,app.main:app,--host,0.0.0.0