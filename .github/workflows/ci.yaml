name: CI

on: [pull_request]

# set the default shell for all actions steps
defaults:
  run:
    shell: bash

run-name: membercenter-api-tests

jobs:
  CI-Linter-and-Tests:
    runs-on: ubuntu-22.04 # you can use the latest version also as it shows (runs-on: ubuntu-latest)
    steps:
      - name: Download GitHub Sources (Checkout)
        timeout-minutes: 2
        uses: actions/checkout@v3
        continue-on-error: false

      - name: Setting up Python v3.11
        timeout-minutes: 5
        uses: actions/setup-python@v4
        with:
          # Semantic version range syntax or exact version of a Python version
          python-version: '3.11'
          cache: 'pip'
          # Optional - x64 or x86 architecture, defaults to x64
          architecture: 'x64'
        continue-on-error: false

      - name: Installing Dependencies (requirements.txt)
        timeout-minutes: 5
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        continue-on-error: false

      - name: Code Formatter
        timeout-minutes: 5
        run: |
          black . --check
        continue-on-error: false

      - name: Setting docker-compose
        uses: KengoTODA/actions-setup-docker-compose@main
        with:
          version: '1.29.2'
        timeout-minutes: 2
        continue-on-error: false

      - name: Configuring env Vars
        timeout-minutes: 2
        run: |
          # Env Vars (test env)
          echo "APP_ENV=test" >> .env.test
          # Redis Host (test env)
          echo "REDIS_HOST=membercenter-redis" >> .env.test
          # BigTable Emulator Host (test env)
          echo "BIGTABLE_EMULATOR_HOST=bigtable:8086" >> .env.test
          # HTTP_BASIC_USER (test env)
          echo "HTTP_BASIC_USER=test-user" >> .env.test
          # HTTP_BASIC_PASS (test env)
          echo "HTTP_BASIC_PASS=123456" >> .env.test
          # CLICKHOUSE_HOST
          echo "CLICKHOUSE_HOST=clickhouse" >> .env.test
          # CLICKHOUSE_PORT
          echo "CLICKHOUSE_PORT=8123" >> .env.test
          # CLICKHOUSE_USER
          echo "CLICKHOUSE_USERNAME=default" >> .env.test
          # CLICKHOUSE_PASSWORD
          echo "CLICKHOUSE_PASSWORD=" >> .env.test
          # CLICKHOUSE_DATABASE
          echo "CLICKHOUSE_DATABASE=membercenter" >> .env.test
          # CLICKHOUSE_CONNECTION_TIMEOUT
          echo "CLICKHOUSE_CONNECTION_TIMEOUT=300" >> .env.test
          # CLICKHOUSE_SECURE
          echo "CLICKHOUSE_SECURE=False" >> .env.test
          # CLICKHOUSE_HOST_PROTOCOL
          echo "CLICKHOUSE_HOST_PROTOCOL=http" >> .env.test
          cp .env.test .env
        continue-on-error: false

      - name: Building the Docker Images
        timeout-minutes: 5
        run: |
          docker-compose -f docker-compose.test.yml --env-file .env.test up -d --remove-orphans
        continue-on-error: false

      - name: Tests with pytest
        timeout-minutes: 5
        run: |
          docker-compose run api-test pytest -v
        continue-on-error: false

      - name: Code Linter
        timeout-minutes: 5
        run: |
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics --ignore=E203
        continue-on-error: false

      - name: Stopping Containers
        timeout-minutes: 5
        run: |
          docker-compose -f docker-compose.test.yml stop
          docker-compose -f docker-compose.test.yml down
        continue-on-error: false
